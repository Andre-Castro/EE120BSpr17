
acast050_FinalProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000272  00800100  000005f8  0000068c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005f8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002eb  00800372  00800372  000008fe  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000008fe  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000930  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000110  00000000  00000000  00000970  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000018cd  00000000  00000000  00000a80  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ae5  00000000  00000000  0000234d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ba4  00000000  00000000  00002e32  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002b8  00000000  00000000  000039d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000764  00000000  00000000  00003c90  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d17  00000000  00000000  000043f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000138  00000000  00000000  0000510b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	c5 c0       	rjmp	.+394    	; 0x1c0 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	13 e0       	ldi	r17, 0x03	; 3
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e8 ef       	ldi	r30, 0xF8	; 248
  a0:	f5 e0       	ldi	r31, 0x05	; 5
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 37       	cpi	r26, 0x72	; 114
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	26 e0       	ldi	r18, 0x06	; 6
  b4:	a2 e7       	ldi	r26, 0x72	; 114
  b6:	b3 e0       	ldi	r27, 0x03	; 3
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ad 35       	cpi	r26, 0x5D	; 93
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	2e d2       	rcall	.+1116   	; 0x520 <main>
  c4:	97 c2       	rjmp	.+1326   	; 0x5f4 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <delay_ms>:
	SendCommand_LCD(0x04);		//set lcd Temp coefficient
	SendCommand_LCD(0x14);		//set lcd bias mode
	SendCommand_LCD(0x20);		//set lcd control in basic mode set (H=0)
	SendCommand_LCD(0x0C);		//set display configuration control in normal mode (alternative: blank, all on, inverse video)
	//SendCommand_LCD(0x0D);	//set display configuration control in inverse mode
	LCD_clear();
  c8:	18 16       	cp	r1, r24
  ca:	19 06       	cpc	r1, r25
  cc:	5c f0       	brlt	.+22     	; 0xe4 <delay_ms+0x1c>
  ce:	08 95       	ret
  d0:	00 00       	nop
  d2:	21 50       	subi	r18, 0x01	; 1
  d4:	31 09       	sbc	r19, r1
  d6:	e1 f7       	brne	.-8      	; 0xd0 <delay_ms+0x8>
  d8:	4f 5f       	subi	r20, 0xFF	; 255
  da:	5f 4f       	sbci	r21, 0xFF	; 255
  dc:	84 17       	cp	r24, r20
  de:	95 07       	cpc	r25, r21
  e0:	19 f4       	brne	.+6      	; 0xe8 <delay_ms+0x20>
  e2:	08 95       	ret
  e4:	40 e0       	ldi	r20, 0x00	; 0
  e6:	50 e0       	ldi	r21, 0x00	; 0
  e8:	27 e0       	ldi	r18, 0x07	; 7
  ea:	33 e0       	ldi	r19, 0x03	; 3
  ec:	f1 cf       	rjmp	.-30     	; 0xd0 <delay_ms+0x8>

000000ee <LCD_WriteCommand>:
  ee:	41 98       	cbi	0x08, 1	; 8
  f0:	8b b9       	out	0x0b, r24	; 11
  f2:	40 9a       	sbi	0x08, 0	; 8
  f4:	00 00       	nop
  f6:	40 98       	cbi	0x08, 0	; 8
  f8:	82 e0       	ldi	r24, 0x02	; 2
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	e5 cf       	rjmp	.-54     	; 0xc8 <delay_ms>
  fe:	08 95       	ret

00000100 <LCD_ClearScreen>:
 100:	81 e0       	ldi	r24, 0x01	; 1
 102:	f5 cf       	rjmp	.-22     	; 0xee <LCD_WriteCommand>
 104:	08 95       	ret

00000106 <LCD_Cursor>:
 106:	81 31       	cpi	r24, 0x11	; 17
 108:	18 f4       	brcc	.+6      	; 0x110 <LCD_Cursor+0xa>
 10a:	81 58       	subi	r24, 0x81	; 129
 10c:	f0 cf       	rjmp	.-32     	; 0xee <LCD_WriteCommand>
 10e:	08 95       	ret
 110:	81 55       	subi	r24, 0x51	; 81
 112:	ed cf       	rjmp	.-38     	; 0xee <LCD_WriteCommand>
 114:	08 95       	ret

00000116 <LCD_init>:
 116:	84 e6       	ldi	r24, 0x64	; 100
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	d6 df       	rcall	.-84     	; 0xc8 <delay_ms>
 11c:	88 e3       	ldi	r24, 0x38	; 56
 11e:	e7 df       	rcall	.-50     	; 0xee <LCD_WriteCommand>
 120:	86 e0       	ldi	r24, 0x06	; 6
 122:	e5 df       	rcall	.-54     	; 0xee <LCD_WriteCommand>
 124:	8f e0       	ldi	r24, 0x0F	; 15
 126:	e3 df       	rcall	.-58     	; 0xee <LCD_WriteCommand>
 128:	81 e0       	ldi	r24, 0x01	; 1
 12a:	e1 df       	rcall	.-62     	; 0xee <LCD_WriteCommand>
 12c:	8a e0       	ldi	r24, 0x0A	; 10
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	cb cf       	rjmp	.-106    	; 0xc8 <delay_ms>
 132:	08 95       	ret

00000134 <LCD_WriteData>:
 134:	41 9a       	sbi	0x08, 1	; 8
 136:	8b b9       	out	0x0b, r24	; 11
 138:	40 9a       	sbi	0x08, 0	; 8
 13a:	00 00       	nop
 13c:	40 98       	cbi	0x08, 0	; 8
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	c2 cf       	rjmp	.-124    	; 0xc8 <delay_ms>
 144:	08 95       	ret

00000146 <LCD_DisplayString>:
 146:	0f 93       	push	r16
 148:	1f 93       	push	r17
 14a:	cf 93       	push	r28
 14c:	df 93       	push	r29
 14e:	18 2f       	mov	r17, r24
 150:	eb 01       	movw	r28, r22
 152:	d6 df       	rcall	.-84     	; 0x100 <LCD_ClearScreen>
 154:	88 81       	ld	r24, Y
 156:	88 23       	and	r24, r24
 158:	51 f0       	breq	.+20     	; 0x16e <LCD_DisplayString+0x28>
 15a:	01 e0       	ldi	r16, 0x01	; 1
 15c:	01 0f       	add	r16, r17
 15e:	81 2f       	mov	r24, r17
 160:	d2 df       	rcall	.-92     	; 0x106 <LCD_Cursor>
 162:	89 91       	ld	r24, Y+
 164:	e7 df       	rcall	.-50     	; 0x134 <LCD_WriteData>
 166:	10 2f       	mov	r17, r16
 168:	88 81       	ld	r24, Y
 16a:	81 11       	cpse	r24, r1
 16c:	f6 cf       	rjmp	.-20     	; 0x15a <LCD_DisplayString+0x14>
 16e:	df 91       	pop	r29
 170:	cf 91       	pop	r28
 172:	1f 91       	pop	r17
 174:	0f 91       	pop	r16
 176:	08 95       	ret

00000178 <TimerOn>:
 178:	8b e0       	ldi	r24, 0x0B	; 11
 17a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 17e:	8d e7       	ldi	r24, 0x7D	; 125
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 186:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 18a:	82 e0       	ldi	r24, 0x02	; 2
 18c:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 190:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 194:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 198:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 19c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 1a0:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 1a4:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 1a8:	80 93 74 03 	sts	0x0374, r24	; 0x800374 <_avr_timer_cntcurr>
 1ac:	90 93 75 03 	sts	0x0375, r25	; 0x800375 <_avr_timer_cntcurr+0x1>
 1b0:	a0 93 76 03 	sts	0x0376, r26	; 0x800376 <_avr_timer_cntcurr+0x2>
 1b4:	b0 93 77 03 	sts	0x0377, r27	; 0x800377 <_avr_timer_cntcurr+0x3>
 1b8:	8f b7       	in	r24, 0x3f	; 63
 1ba:	80 68       	ori	r24, 0x80	; 128
 1bc:	8f bf       	out	0x3f, r24	; 63
 1be:	08 95       	ret

000001c0 <__vector_13>:
 1c0:	1f 92       	push	r1
 1c2:	0f 92       	push	r0
 1c4:	0f b6       	in	r0, 0x3f	; 63
 1c6:	0f 92       	push	r0
 1c8:	11 24       	eor	r1, r1
 1ca:	8f 93       	push	r24
 1cc:	9f 93       	push	r25
 1ce:	af 93       	push	r26
 1d0:	bf 93       	push	r27
 1d2:	80 91 74 03 	lds	r24, 0x0374	; 0x800374 <_avr_timer_cntcurr>
 1d6:	90 91 75 03 	lds	r25, 0x0375	; 0x800375 <_avr_timer_cntcurr+0x1>
 1da:	a0 91 76 03 	lds	r26, 0x0376	; 0x800376 <_avr_timer_cntcurr+0x2>
 1de:	b0 91 77 03 	lds	r27, 0x0377	; 0x800377 <_avr_timer_cntcurr+0x3>
 1e2:	01 97       	sbiw	r24, 0x01	; 1
 1e4:	a1 09       	sbc	r26, r1
 1e6:	b1 09       	sbc	r27, r1
 1e8:	80 93 74 03 	sts	0x0374, r24	; 0x800374 <_avr_timer_cntcurr>
 1ec:	90 93 75 03 	sts	0x0375, r25	; 0x800375 <_avr_timer_cntcurr+0x1>
 1f0:	a0 93 76 03 	sts	0x0376, r26	; 0x800376 <_avr_timer_cntcurr+0x2>
 1f4:	b0 93 77 03 	sts	0x0377, r27	; 0x800377 <_avr_timer_cntcurr+0x3>
 1f8:	89 2b       	or	r24, r25
 1fa:	8a 2b       	or	r24, r26
 1fc:	8b 2b       	or	r24, r27
 1fe:	99 f4       	brne	.+38     	; 0x226 <__vector_13+0x66>
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	80 93 78 03 	sts	0x0378, r24	; 0x800378 <TimerFlag>
 206:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 20a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 20e:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 212:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 216:	80 93 74 03 	sts	0x0374, r24	; 0x800374 <_avr_timer_cntcurr>
 21a:	90 93 75 03 	sts	0x0375, r25	; 0x800375 <_avr_timer_cntcurr+0x1>
 21e:	a0 93 76 03 	sts	0x0376, r26	; 0x800376 <_avr_timer_cntcurr+0x2>
 222:	b0 93 77 03 	sts	0x0377, r27	; 0x800377 <_avr_timer_cntcurr+0x3>
 226:	bf 91       	pop	r27
 228:	af 91       	pop	r26
 22a:	9f 91       	pop	r25
 22c:	8f 91       	pop	r24
 22e:	0f 90       	pop	r0
 230:	0f be       	out	0x3f, r0	; 63
 232:	0f 90       	pop	r0
 234:	1f 90       	pop	r1
 236:	18 95       	reti

00000238 <TimerSet>:
 238:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
 23c:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
 240:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_start+0x2>
 244:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_start+0x3>
 248:	60 93 74 03 	sts	0x0374, r22	; 0x800374 <_avr_timer_cntcurr>
 24c:	70 93 75 03 	sts	0x0375, r23	; 0x800375 <_avr_timer_cntcurr+0x1>
 250:	80 93 76 03 	sts	0x0376, r24	; 0x800376 <_avr_timer_cntcurr+0x2>
 254:	90 93 77 03 	sts	0x0377, r25	; 0x800377 <_avr_timer_cntcurr+0x3>
 258:	08 95       	ret

0000025a <ADC_init>:
 25a:	ea e7       	ldi	r30, 0x7A	; 122
 25c:	f0 e0       	ldi	r31, 0x00	; 0
 25e:	80 81       	ld	r24, Z
 260:	80 6e       	ori	r24, 0xE0	; 224
 262:	80 83       	st	Z, r24
 264:	08 95       	ret

00000266 <joyStick_Tick>:
 266:	04 99       	sbic	0x00, 4	; 0
 268:	08 c0       	rjmp	.+16     	; 0x27a <joyStick_Tick+0x14>
 26a:	81 e1       	ldi	r24, 0x11	; 17
 26c:	4c df       	rcall	.-360    	; 0x106 <LCD_Cursor>
 26e:	80 e2       	ldi	r24, 0x20	; 32
 270:	61 df       	rcall	.-318    	; 0x134 <LCD_WriteData>
 272:	81 e0       	ldi	r24, 0x01	; 1
 274:	48 df       	rcall	.-368    	; 0x106 <LCD_Cursor>
 276:	80 e0       	ldi	r24, 0x00	; 0
 278:	5d cf       	rjmp	.-326    	; 0x134 <LCD_WriteData>
 27a:	08 95       	ret

0000027c <irLoop>:
 27c:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 280:	30 91 79 00 	lds	r19, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 284:	28 17       	cp	r18, r24
 286:	39 07       	cpc	r19, r25
 288:	81 f1       	breq	.+96     	; 0x2ea <irLoop+0x6e>
 28a:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 28e:	30 91 79 00 	lds	r19, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 292:	82 17       	cp	r24, r18
 294:	93 07       	cpc	r25, r19
 296:	81 f1       	breq	.+96     	; 0x2f8 <irLoop+0x7c>
 298:	40 91 78 00 	lds	r20, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 29c:	50 91 79 00 	lds	r21, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 2a0:	21 e0       	ldi	r18, 0x01	; 1
 2a2:	30 e0       	ldi	r19, 0x00	; 0
 2a4:	e8 e7       	ldi	r30, 0x78	; 120
 2a6:	f0 e0       	ldi	r31, 0x00	; 0
 2a8:	08 c0       	rjmp	.+16     	; 0x2ba <irLoop+0x3e>
 2aa:	40 81       	ld	r20, Z
 2ac:	51 81       	ldd	r21, Z+1	; 0x01
 2ae:	2f 5f       	subi	r18, 0xFF	; 255
 2b0:	3f 4f       	sbci	r19, 0xFF	; 255
 2b2:	28 3e       	cpi	r18, 0xE8	; 232
 2b4:	6d ef       	ldi	r22, 0xFD	; 253
 2b6:	36 07       	cpc	r19, r22
 2b8:	a1 f1       	breq	.+104    	; 0x322 <irLoop+0xa6>
 2ba:	84 17       	cp	r24, r20
 2bc:	95 07       	cpc	r25, r21
 2be:	a9 f7       	brne	.-22     	; 0x2aa <irLoop+0x2e>
 2c0:	1d c0       	rjmp	.+58     	; 0x2fc <irLoop+0x80>
 2c2:	2f 5f       	subi	r18, 0xFF	; 255
 2c4:	3f 4f       	sbci	r19, 0xFF	; 255
 2c6:	40 81       	ld	r20, Z
 2c8:	51 81       	ldd	r21, Z+1	; 0x01
 2ca:	28 3e       	cpi	r18, 0xE8	; 232
 2cc:	bd ef       	ldi	r27, 0xFD	; 253
 2ce:	3b 07       	cpc	r19, r27
 2d0:	41 f1       	breq	.+80     	; 0x322 <irLoop+0xa6>
 2d2:	84 17       	cp	r24, r20
 2d4:	95 07       	cpc	r25, r21
 2d6:	a9 f3       	breq	.-22     	; 0x2c2 <irLoop+0x46>
 2d8:	66 0f       	add	r22, r22
 2da:	77 1f       	adc	r23, r23
 2dc:	fb 01       	movw	r30, r22
 2de:	e7 57       	subi	r30, 0x77	; 119
 2e0:	fa 4f       	sbci	r31, 0xFA	; 250
 2e2:	21 83       	std	Z+1, r18	; 0x01
 2e4:	af 5f       	subi	r26, 0xFF	; 255
 2e6:	a0 93 72 05 	sts	0x0572, r26	; 0x800572 <currentPulse>
 2ea:	80 91 72 05 	lds	r24, 0x0572	; 0x800572 <currentPulse>
 2ee:	84 36       	cpi	r24, 0x64	; 100
 2f0:	c0 f0       	brcs	.+48     	; 0x322 <irLoop+0xa6>
 2f2:	10 92 72 05 	sts	0x0572, r1	; 0x800572 <currentPulse>
 2f6:	08 95       	ret
 2f8:	20 e0       	ldi	r18, 0x00	; 0
 2fa:	30 e0       	ldi	r19, 0x00	; 0
 2fc:	a0 91 72 05 	lds	r26, 0x0572	; 0x800572 <currentPulse>
 300:	6a 2f       	mov	r22, r26
 302:	70 e0       	ldi	r23, 0x00	; 0
 304:	fb 01       	movw	r30, r22
 306:	ee 0f       	add	r30, r30
 308:	ff 1f       	adc	r31, r31
 30a:	e7 57       	subi	r30, 0x77	; 119
 30c:	fa 4f       	sbci	r31, 0xFA	; 250
 30e:	20 83       	st	Z, r18
 310:	40 91 78 00 	lds	r20, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 314:	50 91 79 00 	lds	r21, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 318:	21 e0       	ldi	r18, 0x01	; 1
 31a:	30 e0       	ldi	r19, 0x00	; 0
 31c:	e8 e7       	ldi	r30, 0x78	; 120
 31e:	f0 e0       	ldi	r31, 0x00	; 0
 320:	d8 cf       	rjmp	.-80     	; 0x2d2 <irLoop+0x56>
 322:	08 95       	ret

00000324 <SendData_LCD>:
 324:	44 9a       	sbi	0x08, 4	; 8
 326:	45 9a       	sbi	0x08, 5	; 8
 328:	45 98       	cbi	0x08, 5	; 8
 32a:	27 e0       	ldi	r18, 0x07	; 7
 32c:	30 e0       	ldi	r19, 0x00	; 0
 32e:	ac 01       	movw	r20, r24
 330:	02 2e       	mov	r0, r18
 332:	02 c0       	rjmp	.+4      	; 0x338 <SendData_LCD+0x14>
 334:	56 95       	lsr	r21
 336:	47 95       	ror	r20
 338:	0a 94       	dec	r0
 33a:	e2 f7       	brpl	.-8      	; 0x334 <SendData_LCD+0x10>
 33c:	40 ff       	sbrs	r20, 0
 33e:	02 c0       	rjmp	.+4      	; 0x344 <SendData_LCD+0x20>
 340:	43 9a       	sbi	0x08, 3	; 8
 342:	01 c0       	rjmp	.+2      	; 0x346 <SendData_LCD+0x22>
 344:	43 98       	cbi	0x08, 3	; 8
 346:	42 9a       	sbi	0x08, 2	; 8
 348:	42 98       	cbi	0x08, 2	; 8
 34a:	21 50       	subi	r18, 0x01	; 1
 34c:	31 09       	sbc	r19, r1
 34e:	78 f7       	brcc	.-34     	; 0x32e <SendData_LCD+0xa>
 350:	45 9a       	sbi	0x08, 5	; 8
 352:	08 95       	ret

00000354 <SendCommand_LCD>:
 354:	bc 01       	movw	r22, r24
 356:	44 9a       	sbi	0x08, 4	; 8
 358:	45 9a       	sbi	0x08, 5	; 8
 35a:	88 b1       	in	r24, 0x08	; 8
 35c:	80 7c       	andi	r24, 0xC0	; 192
 35e:	88 b9       	out	0x08, r24	; 8
 360:	88 b1       	in	r24, 0x08	; 8
 362:	80 7e       	andi	r24, 0xE0	; 224
 364:	88 b9       	out	0x08, r24	; 8
 366:	27 e0       	ldi	r18, 0x07	; 7
 368:	30 e0       	ldi	r19, 0x00	; 0
 36a:	ab 01       	movw	r20, r22
 36c:	02 2e       	mov	r0, r18
 36e:	02 c0       	rjmp	.+4      	; 0x374 <SendCommand_LCD+0x20>
 370:	56 95       	lsr	r21
 372:	47 95       	ror	r20
 374:	0a 94       	dec	r0
 376:	e2 f7       	brpl	.-8      	; 0x370 <SendCommand_LCD+0x1c>
 378:	40 ff       	sbrs	r20, 0
 37a:	02 c0       	rjmp	.+4      	; 0x380 <SendCommand_LCD+0x2c>
 37c:	43 9a       	sbi	0x08, 3	; 8
 37e:	03 c0       	rjmp	.+6      	; 0x386 <SendCommand_LCD+0x32>
 380:	98 b1       	in	r25, 0x08	; 8
 382:	90 7f       	andi	r25, 0xF0	; 240
 384:	98 b9       	out	0x08, r25	; 8
 386:	42 9a       	sbi	0x08, 2	; 8
 388:	98 b1       	in	r25, 0x08	; 8
 38a:	98 7f       	andi	r25, 0xF8	; 248
 38c:	98 b9       	out	0x08, r25	; 8
 38e:	21 50       	subi	r18, 0x01	; 1
 390:	31 09       	sbc	r19, r1
 392:	58 f7       	brcc	.-42     	; 0x36a <SendCommand_LCD+0x16>
 394:	45 9a       	sbi	0x08, 5	; 8
 396:	08 95       	ret

00000398 <LCD_5110_init>:
 398:	87 b1       	in	r24, 0x07	; 7
 39a:	8c 67       	ori	r24, 0x7C	; 124
 39c:	87 b9       	out	0x07, r24	; 7
 39e:	46 9a       	sbi	0x08, 6	; 8
 3a0:	42 9a       	sbi	0x08, 2	; 8
 3a2:	85 ea       	ldi	r24, 0xA5	; 165
 3a4:	9e e0       	ldi	r25, 0x0E	; 14
 3a6:	01 97       	sbiw	r24, 0x01	; 1
 3a8:	f1 f7       	brne	.-4      	; 0x3a6 <LCD_5110_init+0xe>
 3aa:	00 c0       	rjmp	.+0      	; 0x3ac <LCD_5110_init+0x14>
 3ac:	00 00       	nop
 3ae:	47 9a       	sbi	0x08, 7	; 8
 3b0:	8f e7       	ldi	r24, 0x7F	; 127
 3b2:	9e e3       	ldi	r25, 0x3E	; 62
 3b4:	01 97       	sbiw	r24, 0x01	; 1
 3b6:	f1 f7       	brne	.-4      	; 0x3b4 <LCD_5110_init+0x1c>
 3b8:	00 c0       	rjmp	.+0      	; 0x3ba <LCD_5110_init+0x22>
 3ba:	00 00       	nop
 3bc:	46 9a       	sbi	0x08, 6	; 8
 3be:	88 b1       	in	r24, 0x08	; 8
 3c0:	80 6c       	ori	r24, 0xC0	; 192
 3c2:	88 b9       	out	0x08, r24	; 8
 3c4:	81 e2       	ldi	r24, 0x21	; 33
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	c5 df       	rcall	.-118    	; 0x354 <SendCommand_LCD>
 3ca:	8e eb       	ldi	r24, 0xBE	; 190
 3cc:	90 e0       	ldi	r25, 0x00	; 0
 3ce:	c2 df       	rcall	.-124    	; 0x354 <SendCommand_LCD>
 3d0:	86 e0       	ldi	r24, 0x06	; 6
 3d2:	90 e0       	ldi	r25, 0x00	; 0
 3d4:	bf df       	rcall	.-130    	; 0x354 <SendCommand_LCD>
 3d6:	83 e1       	ldi	r24, 0x13	; 19
 3d8:	90 e0       	ldi	r25, 0x00	; 0
 3da:	bc df       	rcall	.-136    	; 0x354 <SendCommand_LCD>
 3dc:	80 e2       	ldi	r24, 0x20	; 32
 3de:	90 e0       	ldi	r25, 0x00	; 0
 3e0:	b9 df       	rcall	.-142    	; 0x354 <SendCommand_LCD>
 3e2:	8c e0       	ldi	r24, 0x0C	; 12
 3e4:	90 e0       	ldi	r25, 0x00	; 0
 3e6:	b6 cf       	rjmp	.-148    	; 0x354 <SendCommand_LCD>
 3e8:	08 95       	ret

000003ea <LCD_Update>:
void LCD_gotoXY (unsigned char x, unsigned char y){
    SendCommand_LCD(0x80 | x);   //column
	SendCommand_LCD(0x40 | y);   //row
}

void LCD_Update (void){
 3ea:	0f 93       	push	r16
 3ec:	1f 93       	push	r17
 3ee:	cf 93       	push	r28
 3f0:	df 93       	push	r29
 3f2:	c9 e7       	ldi	r28, 0x79	; 121
 3f4:	d3 e0       	ldi	r29, 0x03	; 3
 3f6:	01 e7       	ldi	r16, 0x71	; 113
 3f8:	15 e0       	ldi	r17, 0x05	; 5
	for (short i = 0; i < 504; i++){
		SendData_LCD(LCDBuffer[i]);
 3fa:	89 91       	ld	r24, Y+
 3fc:	90 e0       	ldi	r25, 0x00	; 0
 3fe:	92 df       	rcall	.-220    	; 0x324 <SendData_LCD>
    SendCommand_LCD(0x80 | x);   //column
	SendCommand_LCD(0x40 | y);   //row
}

void LCD_Update (void){
	for (short i = 0; i < 504; i++){
 400:	c0 17       	cp	r28, r16
 402:	d1 07       	cpc	r29, r17
 404:	d1 f7       	brne	.-12     	; 0x3fa <LCD_Update+0x10>
		SendData_LCD(LCDBuffer[i]);
	}
}
 406:	df 91       	pop	r29
 408:	cf 91       	pop	r28
 40a:	1f 91       	pop	r17
 40c:	0f 91       	pop	r16
 40e:	08 95       	ret

00000410 <ReplaceBitmap>:

void ReplaceBitmap (char ReplacementBitmap[]){	//replaces the bitmap by filling the LCDBuffer with the ReplacementBitmap bytes, LCD_Update required after this function
 410:	dc 01       	movw	r26, r24
 412:	e9 e7       	ldi	r30, 0x79	; 121
 414:	f3 e0       	ldi	r31, 0x03	; 3
 416:	21 e7       	ldi	r18, 0x71	; 113
 418:	35 e0       	ldi	r19, 0x05	; 5
	for (short i = 0; i < 504; i++){
		LCDBuffer[i] = ReplacementBitmap[i];
 41a:	8d 91       	ld	r24, X+
 41c:	81 93       	st	Z+, r24
		SendData_LCD(LCDBuffer[i]);
	}
}

void ReplaceBitmap (char ReplacementBitmap[]){	//replaces the bitmap by filling the LCDBuffer with the ReplacementBitmap bytes, LCD_Update required after this function
	for (short i = 0; i < 504; i++){
 41e:	e2 17       	cp	r30, r18
 420:	f3 07       	cpc	r31, r19
 422:	d9 f7       	brne	.-10     	; 0x41a <ReplaceBitmap+0xa>
		LCDBuffer[i] = ReplacementBitmap[i];
	}
}
 424:	08 95       	ret

00000426 <decodeTick>:
		LCD_Cursor(i);
		LCD_WriteData(pulses[i][1] + ' ');
	} */

	unsigned long averageHigh = 0;
	for(i = 0; i < currentPulse; i++){
 426:	20 91 72 05 	lds	r18, 0x0572	; 0x800572 <currentPulse>
 42a:	22 23       	and	r18, r18
 42c:	b1 f0       	breq	.+44     	; 0x45a <decodeTick+0x34>
 42e:	e9 e8       	ldi	r30, 0x89	; 137
 430:	f5 e0       	ldi	r31, 0x05	; 5
 432:	4f ef       	ldi	r20, 0xFF	; 255
 434:	42 0f       	add	r20, r18
 436:	50 e0       	ldi	r21, 0x00	; 0
 438:	44 0f       	add	r20, r20
 43a:	55 1f       	adc	r21, r21
 43c:	45 57       	subi	r20, 0x75	; 117
 43e:	5a 4f       	sbci	r21, 0xFA	; 250
 440:	60 e0       	ldi	r22, 0x00	; 0
 442:	70 e0       	ldi	r23, 0x00	; 0
 444:	cb 01       	movw	r24, r22
		averageHigh += pulses[i][0];
 446:	30 81       	ld	r19, Z
 448:	63 0f       	add	r22, r19
 44a:	71 1d       	adc	r23, r1
 44c:	81 1d       	adc	r24, r1
 44e:	91 1d       	adc	r25, r1
 450:	32 96       	adiw	r30, 0x02	; 2
		LCD_Cursor(i);
		LCD_WriteData(pulses[i][1] + ' ');
	} */

	unsigned long averageHigh = 0;
	for(i = 0; i < currentPulse; i++){
 452:	e4 17       	cp	r30, r20
 454:	f5 07       	cpc	r31, r21
 456:	b9 f7       	brne	.-18     	; 0x446 <decodeTick+0x20>
 458:	03 c0       	rjmp	.+6      	; 0x460 <decodeTick+0x3a>
	for(i = 17; i <33; i++){
		LCD_Cursor(i);
		LCD_WriteData(pulses[i][1] + ' ');
	} */

	unsigned long averageHigh = 0;
 45a:	60 e0       	ldi	r22, 0x00	; 0
 45c:	70 e0       	ldi	r23, 0x00	; 0
 45e:	cb 01       	movw	r24, r22
	for(i = 0; i < currentPulse; i++){
		averageHigh += pulses[i][0];
	}
	averageHigh = averageHigh / currentPulse;
 460:	30 e0       	ldi	r19, 0x00	; 0
 462:	40 e0       	ldi	r20, 0x00	; 0
 464:	50 e0       	ldi	r21, 0x00	; 0
 466:	a4 d0       	rcall	.+328    	; 0x5b0 <__udivmodsi4>
	//LCD_Cursor(1);
	//LCD_WriteData(averageHigh + ' ');

	if(averageHigh > 45 && averageHigh < 57 && !(~PINA & 0x08)){
 468:	da 01       	movw	r26, r20
 46a:	c9 01       	movw	r24, r18
 46c:	8e 97       	sbiw	r24, 0x2e	; 46
 46e:	a1 09       	sbc	r26, r1
 470:	b1 09       	sbc	r27, r1
 472:	0b 97       	sbiw	r24, 0x0b	; 11
 474:	a1 05       	cpc	r26, r1
 476:	b1 05       	cpc	r27, r1
 478:	28 f5       	brcc	.+74     	; 0x4c4 <decodeTick+0x9e>
 47a:	03 9b       	sbis	0x00, 3	; 0
 47c:	23 c0       	rjmp	.+70     	; 0x4c4 <decodeTick+0x9e>
		LCD_DisplayString(1, "Power!");
 47e:	6c ef       	ldi	r22, 0xFC	; 252
 480:	72 e0       	ldi	r23, 0x02	; 2
 482:	81 e0       	ldi	r24, 0x01	; 1
		LCD_Cursor(17);
 484:	60 de       	rcall	.-832    	; 0x146 <LCD_DisplayString>
 486:	81 e1       	ldi	r24, 0x11	; 17
		LCD_WriteData(0x0);
 488:	3e de       	rcall	.-900    	; 0x106 <LCD_Cursor>
 48a:	80 e0       	ldi	r24, 0x00	; 0
 48c:	53 de       	rcall	.-858    	; 0x134 <LCD_WriteData>
		happyBool = 1;
 48e:	81 e0       	ldi	r24, 0x01	; 1
 490:	80 93 71 05 	sts	0x0571, r24	; 0x800571 <happyBool>
		if(powerBool == 0){
 494:	80 91 73 03 	lds	r24, 0x0373	; 0x800373 <powerBool.2108>
 498:	81 11       	cpse	r24, r1
 49a:	0e c0       	rjmp	.+28     	; 0x4b8 <decodeTick+0x92>
			unsigned char temp = PORTC & 0x80;
			if(temp){
 49c:	47 9b       	sbis	0x08, 7	; 8
 49e:	08 c0       	rjmp	.+16     	; 0x4b0 <decodeTick+0x8a>
				PORTC = PORTC & 0x7F;
				on = 0;
				if(currChannel == 0){
					ReplaceBitmap(RobotHead);
 4a0:	47 98       	cbi	0x08, 7	; 8
 4a2:	10 92 72 03 	sts	0x0372, r1	; 0x800372 <__data_end>
 4a6:	84 e0       	ldi	r24, 0x04	; 4
					LCD_Update();
 4a8:	91 e0       	ldi	r25, 0x01	; 1
 4aa:	b2 df       	rcall	.-156    	; 0x410 <ReplaceBitmap>
 4ac:	9e df       	rcall	.-196    	; 0x3ea <LCD_Update>
				else{
					
				}
			}
			else{
				PORTC = PORTC | 0x80;
 4ae:	04 c0       	rjmp	.+8      	; 0x4b8 <decodeTick+0x92>
				on = 1;
 4b0:	47 9a       	sbi	0x08, 7	; 8
 4b2:	81 e0       	ldi	r24, 0x01	; 1
 4b4:	80 93 72 03 	sts	0x0372, r24	; 0x800372 <__data_end>
			}
		}
		powerBool++;
 4b8:	80 91 73 03 	lds	r24, 0x0373	; 0x800373 <powerBool.2108>
 4bc:	8f 5f       	subi	r24, 0xFF	; 255
 4be:	80 93 73 03 	sts	0x0373, r24	; 0x800373 <powerBool.2108>
	}
	else if(averageHigh > 77 && averageHigh < 84 && on){
 4c2:	08 95       	ret
 4c4:	da 01       	movw	r26, r20
 4c6:	c9 01       	movw	r24, r18
 4c8:	8e 54       	subi	r24, 0x4E	; 78
 4ca:	91 09       	sbc	r25, r1
 4cc:	a1 09       	sbc	r26, r1
 4ce:	b1 09       	sbc	r27, r1
 4d0:	06 97       	sbiw	r24, 0x06	; 6
 4d2:	a1 05       	cpc	r26, r1
 4d4:	b1 05       	cpc	r27, r1
 4d6:	68 f4       	brcc	.+26     	; 0x4f2 <decodeTick+0xcc>
 4d8:	80 91 72 03 	lds	r24, 0x0372	; 0x800372 <__data_end>
		LCD_DisplayString(1, "Pointed Towards \"Channel UP\"");
 4dc:	88 23       	and	r24, r24
 4de:	f9 f0       	breq	.+62     	; 0x51e <decodeTick+0xf8>
 4e0:	63 e0       	ldi	r22, 0x03	; 3
 4e2:	73 e0       	ldi	r23, 0x03	; 3
 4e4:	81 e0       	ldi	r24, 0x01	; 1
		happyBool = 0;
 4e6:	2f de       	rcall	.-930    	; 0x146 <LCD_DisplayString>
 4e8:	10 92 71 05 	sts	0x0571, r1	; 0x800571 <happyBool>
		powerBool = 0;
 4ec:	10 92 73 03 	sts	0x0373, r1	; 0x800373 <powerBool.2108>
	}
	else if(averageHigh > 91 && averageHigh < 130 && on){
 4f0:	08 95       	ret
 4f2:	da 01       	movw	r26, r20
 4f4:	c9 01       	movw	r24, r18
 4f6:	8c 55       	subi	r24, 0x5C	; 92
 4f8:	91 09       	sbc	r25, r1
 4fa:	a1 09       	sbc	r26, r1
 4fc:	b1 09       	sbc	r27, r1
 4fe:	86 97       	sbiw	r24, 0x26	; 38
 500:	a1 05       	cpc	r26, r1
 502:	b1 05       	cpc	r27, r1
 504:	60 f4       	brcc	.+24     	; 0x51e <decodeTick+0xf8>
 506:	80 91 72 03 	lds	r24, 0x0372	; 0x800372 <__data_end>
		LCD_DisplayString(1, "Pointed Away    \"Channel DOWN\"");
 50a:	88 23       	and	r24, r24
 50c:	41 f0       	breq	.+16     	; 0x51e <decodeTick+0xf8>
 50e:	60 e2       	ldi	r22, 0x20	; 32
 510:	73 e0       	ldi	r23, 0x03	; 3
		happyBool = 0;
 512:	81 e0       	ldi	r24, 0x01	; 1
 514:	18 de       	rcall	.-976    	; 0x146 <LCD_DisplayString>
		powerBool = 0;
 516:	10 92 71 05 	sts	0x0571, r1	; 0x800571 <happyBool>
 51a:	10 92 73 03 	sts	0x0373, r1	; 0x800373 <powerBool.2108>
 51e:	08 95       	ret

00000520 <main>:
	LCD_Cursor(17);
	LCD_WriteData(averageLow + ' '); */
}

int main(void){
	DDRA = 0x00; PORTA = 0xFF; //Input
 520:	11 b8       	out	0x01, r1	; 1
 522:	8f ef       	ldi	r24, 0xFF	; 255
 524:	82 b9       	out	0x02, r24	; 2
	DDRB = 0xFF; PORTB = 0x00; //Ouptut
 526:	84 b9       	out	0x04, r24	; 4
 528:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xFF; PORTC = 0x00; 
 52a:	87 b9       	out	0x07, r24	; 7
 52c:	18 b8       	out	0x08, r1	; 8
	DDRD = 0xFF; PORTD = 0x00;
 52e:	8a b9       	out	0x0a, r24	; 10
 530:	1b b8       	out	0x0b, r1	; 11
	ADC_init('0');
	LCD_init();
	LCD_ClearScreen();
 532:	80 e3       	ldi	r24, 0x30	; 48
	LCD_Cursor(1);
 534:	92 de       	rcall	.-732    	; 0x25a <ADC_init>
 536:	ef dd       	rcall	.-1058   	; 0x116 <LCD_init>
		
	unsigned long GCD = 1;
	TimerSet(GCD);
 538:	e3 dd       	rcall	.-1082   	; 0x100 <LCD_ClearScreen>
 53a:	81 e0       	ldi	r24, 0x01	; 1
 53c:	e4 dd       	rcall	.-1080   	; 0x106 <LCD_Cursor>
	TimerOn();
 53e:	61 e0       	ldi	r22, 0x01	; 1
 540:	70 e0       	ldi	r23, 0x00	; 0

	//LCD_DisplayString(1, strings[0]);

	LCD_5110_init();
 542:	80 e0       	ldi	r24, 0x00	; 0
 544:	90 e0       	ldi	r25, 0x00	; 0
	//LCDInitialize();
	
	unsigned short x = ADC;
 546:	78 de       	rcall	.-784    	; 0x238 <TimerSet>
 548:	17 de       	rcall	.-978    	; 0x178 <TimerOn>
 54a:	26 df       	rcall	.-436    	; 0x398 <LCD_5110_init>

	PORTC = PORTC & 0x7F;
	
	while (1){
		if (never == 0){ //for some reason this series of writeDatas only work when in the while(1) loop
			LCD_WriteCommand(0x40);
 54c:	00 91 78 00 	lds	r16, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
			//	0x0,0xa,0xa,0xa,0x0,0x11,0xe,0x0
			LCD_WriteData(0x0);
			LCD_WriteData(0xA);
 550:	10 91 79 00 	lds	r17, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
			LCD_WriteData(0xA);
			LCD_WriteData(0xA);
 554:	47 98       	cbi	0x08, 7	; 8
 556:	d0 e0       	ldi	r29, 0x00	; 0
			LCD_WriteData(0x0);
 558:	ff 24       	eor	r15, r15
			LCD_WriteData(0x11);
 55a:	f3 94       	inc	r15
 55c:	d1 11       	cpse	r29, r1
			LCD_WriteData(0xE);
 55e:	15 c0       	rjmp	.+42     	; 0x58a <main+0x6a>
 560:	80 e4       	ldi	r24, 0x40	; 64
 562:	c5 dd       	rcall	.-1142   	; 0xee <LCD_WriteCommand>
			LCD_WriteData(0x0);
 564:	80 e0       	ldi	r24, 0x00	; 0
 566:	e6 dd       	rcall	.-1076   	; 0x134 <LCD_WriteData>
 568:	8a e0       	ldi	r24, 0x0A	; 10
			LCD_WriteCommand(0x80);
 56a:	e4 dd       	rcall	.-1080   	; 0x134 <LCD_WriteData>
 56c:	8a e0       	ldi	r24, 0x0A	; 10
			never = 1;
 56e:	e2 dd       	rcall	.-1084   	; 0x134 <LCD_WriteData>
		//SetPixel(2,2,Black);
		//DrawRectangle(5,5,79,40,Black, NotFilled);
		//ReplaceBitmap(RobotHead);
		//LCD_Update();
		
		if(happyBool){
 570:	8a e0       	ldi	r24, 0x0A	; 10
 572:	e0 dd       	rcall	.-1088   	; 0x134 <LCD_WriteData>
 574:	80 e0       	ldi	r24, 0x00	; 0
			//ADC_init(1);
			joyStick_Tick();
 576:	de dd       	rcall	.-1092   	; 0x134 <LCD_WriteData>
 578:	81 e1       	ldi	r24, 0x11	; 17
		}
		//ADC_init(0);
		decodeTick();
 57a:	dc dd       	rcall	.-1096   	; 0x134 <LCD_WriteData>
 57c:	8e e0       	ldi	r24, 0x0E	; 14
 57e:	da dd       	rcall	.-1100   	; 0x134 <LCD_WriteData>
		while(count2 < 100){ //100 readings to fill up array
			while (!TimerFlag);
 580:	80 e0       	ldi	r24, 0x00	; 0
 582:	d8 dd       	rcall	.-1104   	; 0x134 <LCD_WriteData>
 584:	80 e8       	ldi	r24, 0x80	; 128
 586:	b3 dd       	rcall	.-1178   	; 0xee <LCD_WriteCommand>
			TimerFlag = 0;
 588:	df 2d       	mov	r29, r15
 58a:	80 91 71 05 	lds	r24, 0x0571	; 0x800571 <happyBool>
			count2 ++;

			irLoop(x, y);
 58e:	81 11       	cpse	r24, r1
 590:	6a de       	rcall	.-812    	; 0x266 <joyStick_Tick>
 592:	49 df       	rcall	.-366    	; 0x426 <decodeTick>
 594:	c4 e6       	ldi	r28, 0x64	; 100
 596:	80 91 78 03 	lds	r24, 0x0378	; 0x800378 <TimerFlag>
			//ADC_init(1);
			joyStick_Tick();
		}
		//ADC_init(0);
		decodeTick();
		while(count2 < 100){ //100 readings to fill up array
 59a:	88 23       	and	r24, r24
 59c:	e1 f3       	breq	.-8      	; 0x596 <main+0x76>
 59e:	10 92 78 03 	sts	0x0378, r1	; 0x800378 <TimerFlag>
 5a2:	60 e0       	ldi	r22, 0x00	; 0
 5a4:	70 e0       	ldi	r23, 0x00	; 0
 5a6:	c8 01       	movw	r24, r16
 5a8:	69 de       	rcall	.-814    	; 0x27c <irLoop>
 5aa:	c1 50       	subi	r28, 0x01	; 1
 5ac:	a1 f7       	brne	.-24     	; 0x596 <main+0x76>
 5ae:	d6 cf       	rjmp	.-84     	; 0x55c <main+0x3c>

000005b0 <__udivmodsi4>:
 5b0:	a1 e2       	ldi	r26, 0x21	; 33
 5b2:	1a 2e       	mov	r1, r26
 5b4:	aa 1b       	sub	r26, r26
 5b6:	bb 1b       	sub	r27, r27
 5b8:	fd 01       	movw	r30, r26
 5ba:	0d c0       	rjmp	.+26     	; 0x5d6 <__udivmodsi4_ep>

000005bc <__udivmodsi4_loop>:
 5bc:	aa 1f       	adc	r26, r26
 5be:	bb 1f       	adc	r27, r27
 5c0:	ee 1f       	adc	r30, r30
 5c2:	ff 1f       	adc	r31, r31
 5c4:	a2 17       	cp	r26, r18
 5c6:	b3 07       	cpc	r27, r19
 5c8:	e4 07       	cpc	r30, r20
 5ca:	f5 07       	cpc	r31, r21
 5cc:	20 f0       	brcs	.+8      	; 0x5d6 <__udivmodsi4_ep>
 5ce:	a2 1b       	sub	r26, r18
 5d0:	b3 0b       	sbc	r27, r19
 5d2:	e4 0b       	sbc	r30, r20
 5d4:	f5 0b       	sbc	r31, r21

000005d6 <__udivmodsi4_ep>:
 5d6:	66 1f       	adc	r22, r22
 5d8:	77 1f       	adc	r23, r23
 5da:	88 1f       	adc	r24, r24
 5dc:	99 1f       	adc	r25, r25
 5de:	1a 94       	dec	r1
 5e0:	69 f7       	brne	.-38     	; 0x5bc <__udivmodsi4_loop>
 5e2:	60 95       	com	r22
 5e4:	70 95       	com	r23
 5e6:	80 95       	com	r24
 5e8:	90 95       	com	r25
 5ea:	9b 01       	movw	r18, r22
 5ec:	ac 01       	movw	r20, r24
 5ee:	bd 01       	movw	r22, r26
 5f0:	cf 01       	movw	r24, r30
 5f2:	08 95       	ret

000005f4 <_exit>:
 5f4:	f8 94       	cli

000005f6 <__stop_program>:
 5f6:	ff cf       	rjmp	.-2      	; 0x5f6 <__stop_program>
